options {
    STATIC = true; // make parser methods non static
    DEBUG_PARSER = false;
    LOOKAHEAD = 1;
}
PARSER_BEGIN(IntParser)
import java.util.*;
import java.io.InputStream;
public class IntParser {
   public static void main(String[] args) throws ParseException {
       IntParser parser = new IntParser(System.in);
       EvalVisitor ev= new EvalVisitor();
       System.out.println(ev.visit(parser.parse()));
     }
}
PARSER_END(IntParser)

SKIP : { " " | "\t" | "\n" }

Exp parse() :
{ Token t; Exp e; }
{
  "::" t= <INTEGER> ";" <IDENTIFIER> "=" "{" e=elements(Integer.parseInt(t.image)) "}"
  <EOF>
  {return e;}
}

Exp elements(int size) :
{
 Exp[] e1=new Exp[size]; int i=1;
}
{
  e1[0]=Integer() ( "," e1[i]=Integer() {i=i+1;})*
    {
    return  new List(e1);
    }
}

Exp Integer() :
{ Token t; }
{
  t=<INTEGER>{return new Num(Integer.parseInt(t.image));}
}

TOKEN :
{
  <IDENTIFIER : (["a"-"z"])+ >
| <INTEGER : ("-")?(["0"-"9"])+ >
}
